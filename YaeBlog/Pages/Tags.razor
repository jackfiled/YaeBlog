@page "/blog/tags/"
@using System.Text.Encodings.Web
@using YaeBlog.Core.Abstractions
@using YaeBlog.Core.Models

@inject IEssayContentService Contents
@inject NavigationManager NavigationInstance

<PageTitle>
    @(TagName ?? "标签")
</PageTitle>

<div class="container">
    <div class="row">
        <div class="col">
            @if (TagName is null)
            {
                <h1>标签</h1>
            }
            else
            {
                <h2>@(TagName)</h2>
            }
        </div>
    </div>

    <div class="row">
        <div class="col fst-italic py-4">
            在野外游荡的指针，走向未知的方向。٩(๑˃̵ᴗ˂̵๑)۶
        </div>
    </div>

    @if (TagName is null)
    {
        <div>
            <ul>
                @foreach (KeyValuePair<EssayTag, List<BlogEssay>> pair in
                          Contents.Tags.OrderByDescending(pair => pair.Value.Count))
                {
                    <li class="p-2">
                        <a href="/blog/tags/?tagName=@(pair.Key.UrlEncodedTagName)">
                            <div class="container fs-5">
                                <div class="row">
                                    <div class="col-auto">
                                        # @(pair.Key.TagName)
                                    </div>

                                    <div class="col-auto tag-count">
                                        @(pair.Value.Count)
                                    </div>
                                </div>
                            </div>
                        </a>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <div class="container">
            @foreach (BlogEssay essay in _essays)
            {
                <EssayCard Essay="@essay"/>
            }
        </div>
    }
</div>

@code {
    [SupplyParameterFromQuery] public string? TagName { get; set; }

    private readonly List<BlogEssay> _essays = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (string.IsNullOrEmpty(TagName))
        {
            return;
        }

        if (!Contents.SearchByUrlEncodedTag(UrlEncoder.Default.Encode(TagName), out List<BlogEssay>? essays))
        {
            NavigationInstance.NavigateTo("/NotFound");
            return;
        }

        _essays.AddRange(essays.OrderDescending());
    }

}
